<!-- TODO [YB] No error whyle spec parsing when data type entity missed -->
<!-- TODO [DONE] [YB] external entities shall not be used as attr value - against XML WFC -->


<!-- State data types -->
<!--
     StInt, StUint8, StUint32, StBool
     -->


<!-- Logging data. States the data of FAP element that should be logged -->
<!ELEMENT logdata EMPTY>

<!-- Logspec includes attribute "levent" and assosiated logging data set -->
<!ELEMENT logspec (logdata+)>

<!-- 
     Mutation
-->
<!ELEMENT mut (add*, remove*, change*)>

<!-- 
     Mutation - addition
-->
<!ELEMENT add (inp*, out*, logspec*, iobject* , state*, state_mut*, conn*, ext*, extc*)>

<!-- 
     Mutation - removal
-->
<!ELEMENT remove (node*)>

<!-- 
     Mutation - change (attribute)
-->
<!ELEMENT change EMPTY>

<!-- 
     Node
-->
<!ELEMENT node EMPTY>

<!ELEMENT state (logspec*, trans*, inp*)>

<!ELEMENT trans ANY>

<!-- 
     Object inherited
     This is the base spec of the object
     The spec contains pointing to parent (attr type) and spec for parents mutation
     Mutation can be adding, deleting, changing, and special mutation
-->
<!ELEMENT iobject (mut*)>

<!-- object spec: 
     This is pure chromo of object and normally shouldn't be used in spec
     inp - object inputs, 
     out - object outputs
     logspec - logging spec,
     object - spec of added object(s),
     state - spec of added state(s) spec,
     state_mut - state mutation,
     conn - connnection(s) 
     note: inputs and outputs are just leaing-out of internal states and subsystems
     so "connection" between input and internal state input is leading out state input
     -->
<!ELEMENT object (inp*, out*, logspec*, object* , state*, state_mut*, conn*, ext*, extc*)>

<!-- Object Producing spec -->
<!ELEMENT prod EMPTY >

<!ELEMENT caeenv (iobject*)>

<!-- Output -->
<!ELEMENT out (src*, dest*)>

<!-- Input - connection point that consumes variable data 
     src - sources provided by connection point 
     dest - destinations requested by coneection point
     -->
<!ELEMENT inp (src*, dest*)>

<!-- Transition function -->
<!ELEMENT transf (dep*)>

<!-- Connection -->
<!ELEMENT conn EMPTY >

<!-- Connecting Extention -->
<!ELEMENT ext EMPTY >

<!-- Custom Connecting Extention -->
<!ELEMENT extc (srcext*, dstext*)>

<!-- Connection point source pin -->
<!ELEMENT src EMPTY >

<!-- Connection point dest -->
<!ELEMENT dest EMPTY >

<!-- Custom extention source pin binding  -->
<!ELEMENT srcext EMPTY >

<!-- Custom extention destination pin binding  -->
<!ELEMENT dstext EMPTY >

<!-- Dependency in state connection -->
<!ELEMENT dep EMPTY >

<!-- Logging event: tran - transitioning, upd - updated, cre - created, any - all events -->
<!ATTLIST logspec event (tran | upd | cre | any) #REQUIRED>

<!-- Logging data: cur - current value, new - new value, dep - pependencies -->
<!ATTLIST logdata id (cur | new | dep) #REQUIRED>

<!-- Object  attributes:
     id - instance name,
     -->
<!ATTLIST object 
   id CDATA #REQUIRED
   quiet (yes) #IMPLIED
>

<!-- Inherited Object  attributes:
     type - parent name,
     id - instance name,
     -->
<!ATTLIST iobject 
   type CDATA #REQUIRED
   id CDATA #REQUIRED
   quiet (yes) #IMPLIED
>

<!-- State added attributes:
  mut - mutation, on missing assumen "Add"
  type - type of state
  id - identification of instance
  transf - transtion function 
  init - initial value
  -->
<!ATTLIST state 
    mut (Add | Del | Change) #IMPLIED
    type CDATA #IMPLIED
    id CDATA #REQUIRED
    len CDATA #IMPLIED
    transf CDATA #IMPLIED
    init CDATA #IMPLIED
>

<!-- State mutation attributes:
  id - identification of instance
  transf - transtion function 
  init - initial value
  -->
<!ATTLIST state_mut 
    id CDATA #REQUIRED
    transf CDATA #IMPLIED
    init CDATA #IMPLIED
>

<!--  Input attributes -->
<!ATTLIST inp 
    id CDATA #REQUIRED
>

<!--  Output attributes -->
<!ATTLIST out 
    id CDATA #REQUIRED
>

<!--  Connection point source 
      type is "State" by default
      -->
<!ATTLIST src 
    id CDATA #REQUIRED
    type CDATA #IMPLIED 
>

<!--  Connection point destination 
      type is "State" by default
      -->
<!ATTLIST dest 
    id CDATA #REQUIRED
    type CDATA #IMPLIED 
>

<!-- Connections
   id - subject of connection
   pair - object of connection
     -->
<!ATTLIST conn 
    id  CDATA #REQUIRED
    pair  CDATA #REQUIRED
>

<!-- Connecting extention
   id - subject 
   pair - object
     -->
<!ATTLIST ext 
    id  CDATA #REQUIRED
    pair  CDATA #REQUIRED
>

<!-- Custom Connecting extention
   id - subject 
     -->
<!ATTLIST extc 
    id  CDATA #REQUIRED
>

<!-- Custom Connecting extention - source extention
   id - pin id 
   pair - connecitn pair
     -->
<!ATTLIST srcext 
    id  CDATA #REQUIRED
    pair  CDATA #REQUIRED
>

<!-- Custom Connecting extention - destination extention
   id - pin id 
   pair - connecitn pair
     -->
<!ATTLIST dstext 
    id  CDATA #REQUIRED
    pair  CDATA #REQUIRED
>

<!-- Mutation attributes:
  node - identification of mutation subject
  -->
<!ATTLIST mut 
    node CDATA #IMPLIED
>

<!-- Node  attributes:
     type - node type (object, state etc.),
     id - node name,
     -->
<!ATTLIST node 
   type CDATA #REQUIRED
   id CDATA #REQUIRED
>

<!-- Change  attributes:
     attr - attr name,
     val - attr value,
     -->
<!ATTLIST change
   type CDATA #REQUIRED
   id CDATA #REQUIRED
   attr CDATA #REQUIRED
   val CDATA #REQUIRED
>

<!-- Environment attr -->
<!--
<!ATTLIST caeenv 
   root CDATA #REQUIRED
>
-->
