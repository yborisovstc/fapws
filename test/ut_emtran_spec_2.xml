<?xml version="1.0" ?>

<!-- Specification of FAP environment for unit test for embedded transition -->
<!--
     There are several "snails" that are crawling to one direction
     The the less mass of snail the much its velocity  
     The snail that is crawling first eat more food and thus increase its mass
     The snail that falls behind gets less food and thus loosing its mass
     -->

<!DOCTYPE  caeenv SYSTEM "/home/yborisov/projects/fap/git/fapws/src/objspec.dtd"> 

<caeenv>
    <iobject type="none" id="main_test">
	<mut node="self">
	    <add>
		<out id="snail_1">
		    <src id="coord"/> <src id="mass"/> 
		</out>

		<trans> 
		    let Complex x y :: Struct Float Float := Struct (R::Float I::Float) x y
		    let cc1 :: Complex := Complex 4.0 6.0
		    let cc2 :: Complex := 5.0 7.0
		    let ff1 :: Float := Fld cc1 R
		    let add x y :: Complex Complex Complex := Complex add fld x R fld y R add fld x I fld y I
		    let dec x :: TInt TInt := sub x 1
		    let restrbot x lim :: TInt TInt TInt := if lt x lim lim x
		    let restrtop x lim :: TInt TInt TInt := if gt x lim lim x
		    let restr x y z :: TInt TInt TInt TInt := restrbot restrtop x z y
		</trans>

		<iobject type="none" id="snail" quiet="yes"> 
		    <mut node="self">
			<add>
			    <inp id="coord_others"/>
			    <out id="coord"/>
			    <out id="mass"/>
			    <out id="outp"> <src id="coord"/> <src id="mass"/> </out>

			    <logspec  event="cre"> <logdata id="new"/> </logspec>

			    <trans> 
				let KMaxFeed :: TInt := 2 
				let KMinMass :: TInt := 1
				let KMaxMass :: TInt := 100 
			    </trans>

			    <state type="StInt" id="mass" init="2"> 
				<logspec event="upd"> <logdata id="new"/></logspec> 
				<logspec event="tran"> <logdata id="trex"/></logspec> 
				<inp id="self"/> <inp id="coord_self"/> <inp id="coord_others"/> 
				<trans>
				    let icothers :: [TInt] := inp coord_others
				    let infrontcnt :: TInt := count filter lt inp coord_self icothers
				    let rmass :: TInt := sub add inp self sub KMaxFeed infrontcnt 1
				    restr rmass KMinMass KMaxMass
				</trans>
			    </state>

			    <state type="StInt" id="coord" len="4" init="0"> 
				<logspec event="upd"> <logdata id="cur"/> <logdata id="new"/> </logspec> 
				<inp id="self"/> <inp id="mass"/> 
				<trans> add inp self div KMaxMass inp mass </trans>
			    </state>

			    <conn id="mass.self" pair="mass.output"/> 
			    <conn id="mass.coord_self" pair="coord.output"/> 
			    <conn id="coord.self" pair="coord.output"/> 
			    <conn id="coord.mass" pair="mass.output"/>

			    <ext id="coord_others" pair="mass.coord_others"/>
			    <ext id="coord" pair="coord.output"/>
			    <ext id="mass" pair="mass.output"/>

			    <extc id="outp">
				<srcext id="coord" pair="coord.output"/>
				<srcext id="mass" pair="mass.output"/>
			    </extc>
			</add>
		    </mut>

		</iobject> <!-- snail -->

		<iobject type="snail" id="snail_1" > <mut node="self"> <change type="state" id="mass" attr="init" val="7"/> </mut>  </iobject>
		<iobject type="snail" id="snail_2" > <mut node="self"> <change type="state" id="mass" attr="init" val="3"/> </mut>  </iobject>
		<iobject type="snail" id="snail_3" > <mut node="self"> <change type="state" id="mass" attr="init" val="16"/> </mut> </iobject>

		<conn id="snail_1.coord_others" pair="snail_2.coord"/><conn id="snail_1.coord_others" pair="snail_3.coord"/>
		<conn id="snail_2.coord_others" pair="snail_1.coord"/> <conn id="snail_2.coord_others" pair="snail_3.coord"/>
		<conn id="snail_3.coord_others" pair="snail_1.coord"/> <conn id="snail_3.coord_others" pair="snail_2.coord"/>

		<extc id="snail_1"> <srcext id="coord" pair="snail_1.coord"/> <srcext id="mass" pair="snail_1.mass"/> </extc>
		<extc id="snail_1"> <srcext id="coord" pair="snail_2.coord"/> <srcext id="mass" pair="snail_2.mass"/> </extc>

	    </add>
	</mut>
    </iobject> <!-- test -->
</caeenv>

